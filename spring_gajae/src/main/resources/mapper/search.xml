<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="search">

	<!-- 검색 -->
	<select id="searchlist" parameterType="map" resultType="map">
		
		SELECT 
		P.P_ID, 
		P.P_TITLE, 
		P.P_ADDRESS, 
		P.P_CHECKOUT, 
		GROUP_CONCAT(DISTINCT B.P_EXTRA) AS P_EXTRA,   
		COALESCE(MAX(R.REVIEW_AVERAGE), 0) AS REVIEW_AVERAGE,   
		P.P_CHECKIN,   
		GROUP_CONCAT(DISTINCT P.P_REFUND) AS P_REFUND,  
		MIN(CAST(A.ROOM_PRICE AS SIGNED)) AS ROOM_PRICE,   
		GROUP_CONCAT(DISTINCT A.ROOM_TYPE) AS ROOM_TYPE,   
		MAX(A.ROOM_OPTION) AS ROOM_OPTION,   
		P.P_STAR,   
		P.P_PHOTO  
		FROM GAJAE.PROPERTIES P  
		INNER JOIN GAJAE.P_ROOMTYPE A ON P.ROOM_ID = A.ROOM_ID   
		INNER JOIN GAJAE.P_EXTRAS B ON P.P_ID = B.P_ID   
		LEFT OUTER JOIN GAJAE.RESERVATIONS S ON S.P_ID = P.P_ID   
		LEFT OUTER JOIN GAJAE.REVIEW R ON S.R_NUMBER = R.R_NUMBER   
		WHERE P.STATUS = 'Y'       
		<if test="P_ADDRESS != null">
			AND P_ADDRESS LIKE '%${P_ADDRESS}%'
		</if>
		<if test="ROOM_CAPACITY != null">
			AND A.ROOM_CAPACITY >= '${ROOM_CAPACITY}'
		</if>
		<if test="P_EXTRA != null">
			AND P.P_ID = B.P_ID
		</if>
		<if test="P_EXTRA != null and P_EXTRA.size() > 0">
			AND (
			<foreach collection="P_EXTRA" item="P_EXTRA"
				separator=" AND ">
				P.P_ID IN (
				SELECT P_ID
				FROM P_EXTRAS
				WHERE P_EXTRA =
				#{P_EXTRA}
				)
			</foreach>
			)
		</if>
		<if test="P_STAR != null and P_STAR.size() > 0">
			AND P.P_STAR IN
			<foreach collection="P_STAR" item="P_STAR" open="(" close=")"
				separator=",">
				#{P_STAR}
			</foreach>
		</if>
		GROUP BY P.P_ID, P.P_TITLE, P.P_ADDRESS, P.P_CHECKOUT, P.P_CHECKIN,
		P.P_STAR, P.P_PHOTO
		ORDER BY P_ID DESC
	</select>


	<!-- 정렬조건 -->
	<select id="priceLow" parameterType="map" resultType="map">
		SELECT 
		P.P_ID, 
		P.P_TITLE, 
		P.P_ADDRESS, 
		P.P_CHECKOUT,
		GROUP_CONCAT(DISTINCT B.P_EXTRA) AS P_EXTRA,
		COALESCE(MAX(R.REVIEW_AVERAGE), 0) AS REVIEW_AVERAGE,
		P.P_CHECKIN,
		GROUP_CONCAT(DISTINCT P.P_REFUND) AS P_REFUND,
		MIN(CAST(A.ROOM_PRICE AS SIGNED)) AS ROOM_PRICE,
		GROUP_CONCAT(DISTINCT A.ROOM_TYPE) AS ROOM_TYPE,
		MAX(A.ROOM_OPTION) AS ROOM_OPTION,
		P.P_STAR,
		P.P_PHOTO
		FROM PROPERTIES P
		INNER JOIN
		P_ROOMTYPE A ON P.ROOM_ID = A.ROOM_ID
		INNER JOIN P_EXTRAS B ON P.P_ID =
		B.P_ID
		LEFT OUTER JOIN RESERVATIONS S ON S.P_ID = P.P_ID
		LEFT OUTER JOIN
		REVIEW R ON S.R_NUMBER = R.R_NUMBER
		WHERE P.STATUS = 'Y'
		<if test="P_ADDRESS != null">
			AND P_ADDRESS LIKE '%${P_ADDRESS}%'
		</if>
		<if test="ROOM_CAPACITY != null">
			AND A.ROOM_CAPACITY >= '${ROOM_CAPACITY}'
		</if>
		<if test="P_EXTRA != null">
			AND P.P_ID = B.P_ID
		</if>
		<if test="P_EXTRA != null and P_EXTRA.size() > 0">
			AND (
			<foreach collection="P_EXTRA" item="P_EXTRA"
				separator=" AND ">
				P.P_ID IN (
				SELECT P_ID
				FROM P_EXTRAS
				WHERE P_EXTRA =
				#{P_EXTRA}
				)
			</foreach>
			)
		</if>
		<if test="P_STAR != null and P_STAR.size() > 0">
			AND P.P_STAR IN
			<foreach collection="P_STAR" item="P_STAR" open="(" close=")"
				separator=",">
				#{P_STAR}
			</foreach>
		</if>
		GROUP BY 
		P.P_ID,
		P.P_TITLE, 
		P.P_ADDRESS, 
		P.P_CHECKOUT, 
		P.P_CHECKIN,
		P.P_REFUND, 
		P.P_STAR, 
		P.P_PHOTO
		ORDER BY ROOM_PRICE ASC
	</select>

	<select id="priceHigh" parameterType="map" resultType="map">
		SELECT P.P_ID, P.P_TITLE, P.P_ADDRESS, P.P_CHECKOUT,
		GROUP_CONCAT(DISTINCT B.P_EXTRA) AS P_EXTRA,
		COALESCE(MAX(R.REVIEW_AVERAGE), 0) AS REVIEW_AVERAGE,
		P.P_CHECKIN,
		GROUP_CONCAT(DISTINCT P.P_REFUND) AS P_REFUND,
		MIN(CAST(A.ROOM_PRICE AS SIGNED)) AS ROOM_PRICE,
		GROUP_CONCAT(DISTINCT A.ROOM_TYPE) AS ROOM_TYPE,
		MAX(A.ROOM_OPTION) AS ROOM_OPTION,
		P.P_STAR,
		P.P_PHOTO
		FROM PROPERTIES P
		INNER JOIN
		P_ROOMTYPE A ON P.ROOM_ID = A.ROOM_ID
		INNER JOIN P_EXTRAS B ON P.P_ID =
		B.P_ID
		LEFT OUTER JOIN RESERVATIONS S ON S.P_ID = P.P_ID
		LEFT OUTER JOIN
		REVIEW R ON S.R_NUMBER = R.R_NUMBER
		WHERE P.STATUS = 'Y'
		<if test="P_ADDRESS != null">
			AND P_ADDRESS LIKE '%${P_ADDRESS}%'
		</if>
		<if test="ROOM_CAPACITY != null">
			AND A.ROOM_CAPACITY >= '${ROOM_CAPACITY}'
		</if>
		<if test="P_EXTRA != null">
			AND P.P_ID = B.P_ID
		</if>
		<if test="P_EXTRA != null and P_EXTRA.size() > 0">
			AND (
			<foreach collection="P_EXTRA" item="P_EXTRA"
				separator=" AND ">
				P.P_ID IN (
				SELECT P_ID
				FROM P_EXTRAS
				WHERE P_EXTRA =
				#{P_EXTRA}
				)
			</foreach>
			)
		</if>
		<if test="P_STAR != null and P_STAR.size() > 0">
			AND P.P_STAR IN
			<foreach collection="P_STAR" item="P_STAR" open="(" close=")"
				separator=",">
				#{P_STAR}
			</foreach>
		</if>
		GROUP BY P.P_ID, P.P_TITLE, P.P_ADDRESS, P.P_CHECKOUT, P.P_CHECKIN,
		P.P_REFUND, P.P_STAR, P.P_PHOTO
		ORDER BY ROOM_PRICE DESC
	</select>


	<!-- 리뷰 순 -->
	<select id="reviewHigh" parameterType="map" resultType="map">
		SELECT P.P_ID, P.P_TITLE, P.P_ADDRESS, P.P_CHECKOUT,
		GROUP_CONCAT(DISTINCT B.P_EXTRA) AS P_EXTRA,
		COALESCE(MAX(R.REVIEW_AVERAGE), 0) AS REVIEW_AVERAGE,
		P.P_CHECKIN,
		GROUP_CONCAT(DISTINCT P.P_REFUND) AS P_REFUND,
		MIN(CAST(A.ROOM_PRICE AS SIGNED)) AS ROOM_PRICE,
		GROUP_CONCAT(DISTINCT A.ROOM_TYPE) AS ROOM_TYPE,
		MAX(A.ROOM_OPTION) AS ROOM_OPTION,
		P.P_STAR, 
		P.P_PHOTO
		FROM PROPERTIES P
		INNER JOIN
		P_ROOMTYPE A ON P.ROOM_ID = A.ROOM_ID
		INNER JOIN P_EXTRAS B ON P.P_ID =
		B.P_ID
		LEFT OUTER JOIN RESERVATIONS S ON S.P_ID = P.P_ID
		LEFT OUTER JOIN
		REVIEW R ON S.R_NUMBER = R.R_NUMBER
		WHERE P.STATUS = 'Y'
		<if test="P_ADDRESS != null">
			AND P_ADDRESS LIKE '%${P_ADDRESS}%'
		</if>
		<if test="ROOM_CAPACITY != null">
			AND A.ROOM_CAPACITY >= '${ROOM_CAPACITY}'
		</if>
		<if test="P_EXTRA != null">
			AND P.P_ID = B.P_ID
		</if>
		<if test="P_EXTRA != null and P_EXTRA.size() > 0">
			AND (
			<foreach collection="P_EXTRA" item="P_EXTRA"
				separator=" AND ">
				P.P_ID IN (
				SELECT P_ID
				FROM P_EXTRAS
				WHERE P_EXTRA =
				#{P_EXTRA}
				)
			</foreach>
			)
		</if>
		<if test="P_STAR != null and P_STAR.size() > 0">
			AND P.P_STAR IN
			<foreach collection="P_STAR" item="P_STAR" open="(" close=")"
				separator=",">
				#{P_STAR}
			</foreach>
		</if>
		GROUP BY P.P_ID, P.P_TITLE, P.P_ADDRESS, P.P_CHECKOUT, P.P_CHECKIN,
		P.P_REFUND, P.P_STAR, P.P_PHOTO
		ORDER BY REVIEW_AVERAGE DESC
	</select>



	<select id="noticeList" parameterType="map" resultType="map">
		SELECT
		A_NO, A_TITLE, A_CONTENT FROM NOTICE
	</select>

	<select id="markList" parameterType="map" resultType="map">
		SELECT
		DISTINCT P_MAPX, P_MAPY, P_ID, P_TITLE, P_STAR
		FROM PROPERTIES
		WHERE
		P_ID IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
	</select>
</mapper>