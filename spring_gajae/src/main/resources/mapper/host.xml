<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="host">

	<!-- 중복확인 -->
	<select id="overlapCheck" parameterType="map" resultType="map">
		SELECT
		HOST_ID,
		HOST_EMAIL
		FROM
		GAJAE.HOST
		<if test='HOST_ID!=null and HOST_ID.length()>0'>
			WHERE HOST_ID = #{HOST_ID}
		</if>
		<if test='HOST_EMAIL!=null and HOST_EMAIL.length()>0'>
			WHERE HOST_EMAIL = #{HOST_EMAIL}
		</if>
	</select>
	<!-- 로그인 -->
	<select id="login" parameterType="map" resultType="map">
		SELECT
		HOST_ID,
		HOST_PW,
		HOST_NAME,
		HOST_BUSINESS_NUM
		FROM
		GAJAE.HOST
		WHERE
		HOST_ID = #{HOST_ID}
		AND
		HOST_PW =#{HOST_PW}
	</select>
	<!--room_id가져오기 -->
	<select id="getRoomIds" parameterType="map" resultType="map">
		SELECT
		ROOM_ID
		FROM properties
		WHERE P_ID = #{P_ID}
	</select>

	<select id="facPidExist" parameterType="map" resultType="map">
		SELECT
		P_ID
		FROM properties
		WHERE P_ID = #{P_ID}
	</select>

	<insert id="signup">
		INSERT INTO GAJAE.HOST
		(
		HOST_ID,
		HOST_NAME,
		HOST_PW,
		HOST_EMAIL,
		HOST_TEL,
		HOST_HIREDATE,
		HOST_BUSINESS_NUM
		)
		VALUES
		(
		#{HOST_ID},
		#{HOST_NAME},
		#{HOST_PW},
		#{HOST_EMAIL},
		#{HOST_TEL},
		DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s'),
		#{HOST_BUSINESS_NUM}
		)
	</insert>

	<!-- properties에서 최대값을 찾아서 1을 더해서 채번하는 쿼리문 -->
	<select id="getPid" parameterType="int" resultType="int">
		SELECT
		max(p_id)+1 FROM properties
	</select>

	<!-- 호텔등록 -->
	<update id="propertyInsert" parameterType="list">
		INSERT ALL
		<foreach collection="list" item="item" index="index"
			separator=" ">
			INTO
			GAJAE.PROPERTIES(
			P_ID,
			ROOM_ID,
			P_TITLE,
			P_STAR,
			P_POSTAL,
			P_TEL,
			<!-- P_ADDRESS, -->
			P_OVERVIEW,
			P_SCALE,
			P_CHECKIN,
			P_CHECKOUT,
			P_REFUND,
			P_HIREDATE,
			P_PHOTO,
			HOST_BUSINESS_NUM,
			P_MAPX,
			P_MAPY,
			STATUS
			)
			VALUES(
			#{item.p_id},
			#{item.r_id},
			#{item.p_title},
			#{item.p_star},
			#{item.p_postal},
			#{item.p_tel},
			#{item.p_address},
			#{item.p_overview},
			#{item.p_scale},
			#{item.p_checkin},
			#{item.p_checkout},
			#{item.p_refund},
			NOW(),
			#{item.p_photo},
			#{item.host_business_num},
			#{item.p_mapx},
			#{item.p_mapy},
			'Y'
			)
		</foreach>
		SELECT * FROM dual
	</update>

	<!-- 시설등록 -->
	<insert id="hostfacInsert" parameterType="map">
		INSERT INTO
		GAJAE.PRO_FACILITIES
		(
		P_ID,
		FAC_ROOM ,
		FAC_RESTARUANT ,
		FAC_SECURITY ,
		FAC_BATHROOM ,
		FAC_PARKING ,
		FAC_BED ,
		FAC_LIVING ,
		FAC_MEDIA ,
		FAC_INTERNET ,
		FAC_SERVICE ,
		FAC_GENERAL ,
		FAC_LANGUAGE ,
		FAC_KITCHEN ,
		FAC_RECEPTION
		)
		VALUES
		(
		#{P_ID},
		#{FAC_ROOM},
		#{FAC_RESTARUANT},
		#{FAC_SECURITY},
		#{FAC_BATHROOM},
		#{FAC_PARKING},
		#{FAC_BED},
		#{FAC_LIVING},
		#{FAC_MEDIA},
		#{FAC_INTERNET},
		#{FAC_SERVICE},
		#{FAC_GENERAL},
		#{FAC_LANGUAGE},
		#{FAC_KITCHEN},
		#{FAC_RECEPTION}
		)
	</insert>

	<update id="hostextraInsert" parameterType="list">
		INSERT ALL
		<foreach collection="list" item="item" index="index"
			separator=" ">
			INTO
			GAJAE.P_EXTRAS (
			P_ID,
			P_EXTRA_SEQ,
			P_EXTRA
			)
			VALUES
			(
			#{item.P_ID},
			#{item.P_EXTRA_SEQ},
			#{item.P_EXTRA}
			)
		</foreach>
		SELECT * FROM dual
	</update>
	<!--등록한 호텔리스트 -->
	<select id="hotelList" parameterType="map" resultType="map">
		SELECT
		p.P_ID,
		p.P_TITLE ,
		p.P_PHOTO,
		p.P_HIREDATE,
		p.P_OVERVIEW,
		p.P_ADDRESS,
		p.P_TEL,
		p.P_STAR,
		p.STATUS
		FROM
		PROPERTIES p
		JOIN HOST h ON
		p.HOST_BUSINESS_NUM
		=h.HOST_BUSINESS_NUM
		<if test='HOST_ID!=null and HOST_ID.length()>0'>
			WHERE h.HOST_ID =#{HOST_ID}
		</if>
		GROUP BY
		p.P_ID,
		p.P_TITLE ,
		p.P_PHOTO,
		p.P_HIREDATE,
		p.P_TEL,
		p.P_ADDRESS,
		p.P_OVERVIEW,
		p.P_STAR,
		p.STATUS
	</select>

	<!--나의 호텔 Detail -->
	<select id="hotelDetail" parameterType="map" resultType="map">
		SELECT
		p.P_ID ,
		STATUS,
		pr.ROOM_TYPE,
		P_TITLE ,
		P_PHOTO ,
		P_STAR ,
		P_POSTAL,
		P_TEL,
		P_ADDRESS ,
		P_OVERVIEW ,
		P_SCALE ,
		P_CHECKIN ,
		P_CHECKOUT ,
		P_REFUND
		,
		pf.FAC_ROOM ,
		P_CHANGE_DATE
		FROM PROPERTIES p
		JOIN P_ROOMTYPE pr ON
		pr.ROOM_ID = p.ROOM_ID
		JOIN
		PRO_FACILITIES pf ON pf.P_ID = p.P_ID
		<if test='P_ID!=null and P_ID.length()>0'>
			WHERE p.P_ID =#{P_ID}
		</if>

	</select>

	<!-- 호텔정보 수정하기 -->
	<update id="hotelUpdate" parameterType="map">
		UPDATE GAJAE.PROPERTIES
		SET
		P_ID=#{P_ID},
		P_TITLE=#{P_TITLE},
		P_STAR=#{P_STAR},
		P_PHOTO=#{P_PHOTO},
		P_TEL=#{P_TEL},
		P_OVERVIEW=#{P_OVERVIEW},
		P_SCALE=#{P_SCALE},
		P_CHECKIN=#{P_CHECKIN},
		P_CHECKOUT=#{P_CHECKOUT},
		P_CHANGE_DATE= NOW(),
		STATUS=#{STATUS}
		WHERE P_ID = #{P_ID}
	</update>

	<delete id="hotelDelete" parameterType="map">
		DELETE FROM PROPERTIES
		WHERE P_ID = #{P_ID}
	</delete>


</mapper>